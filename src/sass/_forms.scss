// FORMS

&.show-optional-labels .label--required::after {
    content: ' *';
    color: var(--danger-color);
}

&.show-optional-labels .label--optional::after {
    content: ' (optional)';
    color: var(--text-color--muted);
}

&:not(.show-optional-labels) .show-optional-info {
    display: none;
}

form {
    margin: 0 !important;
}

/*
input[type="text"],
input[type="email"],
input[type="number"],
input:not([type="checkbox"]):not([type="radio"]),
select,
textarea {
    all : unset !important;
}

 */

// Remove spinner from number input
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type='number'] {
    -moz-appearance: textfield !important;
}

input[type='number'] {
    -moz-appearance: textfield;
    font-size: var(--base-font-size) !important;
    font-family: inherit !important;
    appearance: none;
    vertical-align: middle;
}

input[type='checkbox'] {
    vertical-align: middle;
    margin: -2px 0 0 0;
}

label {
    display: block;
    font-size: var(--base-font-size--small) !important;
    text-transform: capitalize !important;
    color: $label-color !important;
    line-height: inherit !important;
}

.input-group {
    position: relative;
    width: 100%;
    margin: 0 0 calc(var(--base-gutter-size) * 0.5);
}

.input-group--hidden {
    display: flex;
    align-items: center;
    font-size: var(--base-font-size);
    color: var(--action-color);
    margin: 0 0 12px;
}

.input-group input:not([type='checkbox']):not([type='radio']),
.input-group select,
.input-group textarea {
    display: block;
    height: auto !important;
    width: 100% !important;
    margin: 0 !important;
    padding: $base-unit--lg $base-unit--xs $base-unit--xs !important;
    color: $input-color !important;
    background-color: rgba(255, 255, 255, 0.1) !important;
    background-image: none !important;
    font-size: var(--base-font-size) !important;
    line-height: 1.5 !important;
    font-family: inherit !important;
    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1) !important;
    border-radius: $base-border-radius !important;
    box-sizing: border-box !important;
    transition: box-shadow 0.3s ease-in-out !important;
    border: none !important;
    outline: none !important;
    appearance: none !important;
}

// Increase font size of inputs to 16px to avoid auto zoom
@supports (-webkit-overflow-scrolling: touch) {
    .input-group input:not([type='checkbox']):not([type='radio']),
    .input-group select,
    .input-group textarea,
    .supr-textarea {
        font-size: 16px !important;
    }
}

// Invalid
.input-group input.ng-touched.ng-invalid:not([type='checkbox']):not([type='radio']),
select.ng-touched.ng-invalid {
    box-shadow: inset 0 0 0 1px $input-color--invalid, 0 16px 0 0 $input-color--invalid !important;
}

.input-group input.ng-touched.ng-invalid ~ label,
select.ng-touched.ng-invalid ~ label {
    color: $label-color--invalid !important;
    font-weight: 700;
}

// Valid
.input-group input.ng-touched.ng-valid:not([type='checkbox']):not([type='radio']),
select.ng-touched.ng-valid {
    box-shadow: inset 0 0 0 1px $input-color--valid !important;
}

.input-group input.ng-touched.ng-valid ~ label,
select.ng-touched.ng-valid ~ label {
    color: $label-color--valid !important;
}

// Focus
.input-group input:not([type='checkbox']):not([type='radio']):focus,
.input-group input.ng-touched.ng-valid:not([type='checkbox']):not([type='radio']):focus,
select:focus,
textarea:focus {
    border: none !important;
    outline: none !important;
    box-shadow: inset 0 0 0 1px var(--action-color) !important;
}

// fixes just one line of bad css in SUPR 2, remove if fixed
.input-group input:not([type='checkbox']):not([type='radio']):hover,
.input-group input.ng-touched.ng-valid:not([type='checkbox']):not([type='radio']):hover,
select:hover,
textarea:hover {
    border: none !important;
}

.input-group input:focus ~ label,
select:focus ~ label,
textarea:focus ~ label {
    font-weight: 700;
    color: var(--action-color) !important;
}

// Placeholders
.input-group input::placeholder,
textarea::placeholder {
    color: var(--text-color--muted);
}

// Select
select ~ .select-indicator {
    position: absolute;
    right: 0;
    top: 0;
    height: 50px;
    width: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    pointer-events: none;
    box-shadow: -1px 0 0 0 rgba(0, 0, 0, 0.1);
}

select ~ .select-indicator:hover {
    background-color: #fcfcfc;
}

option {
    margin: 0;
    padding: 0;
    -moz-appearance: none;
    -webkit-appearance: none;
    padding-inline-start: 0;
    padding-inline-end: 0;
}

.input-group input ~ label,
select ~ label,
textarea ~ label {
    font-size: var(--base-font-size--small) !important;
    text-transform: $label-text-transform !important;
    line-height: inherit !important;
    margin: 0 !important;
    position: absolute;
    left: $base-unit--xs;
    top: $base-unit--xs;
    color: var(--text-color--muted) !important;
    transition: color 0.3s ease-in-out;
}

// Errors
.input-group input ~ .error-message,
select ~ .error-message {
    margin: 0 0 0 $base-unit--xs;
    font-size: var(--base-font-size--small);
    color: #ffffff;
    display: none;
}

.input-group input ~ .error-message:before,
select ~ .error-message:before {
    content: 'âš  ';
}

.input-group input.ng-touched.ng-invalid ~ .error-message,
select.ng-touched.ng-invalid ~ .error-message {
    display: block;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

// Hints
.input-group .hint {
    margin: 0 0 0 $base-unit--xs;
    font-size: var(--base-font-size--small);
    color: $grey--64;
}

.input-group input.ng-touched.ng-invalid ~ .hint,
select.ng-touched.ng-invalid ~ .hint {
    display: none;
}

input:disabled,
select:disabled {
    opacity: 0.75;
    cursor: not-allowed;
}

input:read-only,
input:read-only:focus {
    cursor: default;
    border: none !important;
    box-shadow: none !important;
    background-color: transparent !important;
}

@import '_checkboxes';
